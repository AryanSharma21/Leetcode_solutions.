class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        ArrayList<Integer> list = new ArrayList<Integer>();
     for(int i=0;i<nums1.length;i++){
         if(inarray(nums2,nums1[i])){
             list.add(nums1[i]);
             nums2[indexof(nums2,nums1[i])] = 0;
         }
     }   
        int[] ans = new int[list.size()];
            for(int i=0;i<ans.length;i++){
                ans[i] = list.get(i).intValue();
            }
        return ans;
    }
    static boolean inarray(int[] array,int target){
        int start = 0;
        int end = array.length-1;
        while(start<=end){
            int mid = start+(end-start)/2;
            if(array[mid]==target){
                return true;
            }
            if(array[mid]>target){
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }
        return false;
    } 
    static int indexof(int[] arr,int target){
        for(int i=0;i<arr.length;i++){
            if(arr[i]==target){
                return i;
            }
        }
        return 0;
    }
}
